{"ast":null,"code":"var _jsxFileName = \"/home/nhomo/2ibi.challenge/restcountries/src/Components/test.js\";\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Convert from './Convert';\nimport CsvDownload from 'react-json-to-csv';\nimport JsonToExcel from 'react-json-excel';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 15\n  }\n})));\nexport default function Options(props) {\n  const className = ' class-name-for-style ',\n        filename = ' arquivo Excel ',\n        campos = {\n    \" índice \": \" Índice \",\n    \" guid \": \" GUID \"\n  },\n        style = {\n    preenchimento: \" 5px \"\n  },\n        data = [{\n    índice: 0,\n    guid: ' asdf231234 '\n  }, {\n    índice: 1,\n    guid: ' wetr2343af '\n  }],\n        text = \" Converter Json para Excel \";\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    checkedA: false,\n    checkedB: false,\n    checkedC: false\n  });\n  const [mockdata, setMockData] = useState([]);\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CsvDownload, {\n    className: classes.button,\n    data: props.mockdata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, \"Download no Formarto XLS\"), /*#__PURE__*/React.createElement(JsonToExcel, {\n    dados: props.mockdata,\n    className: className,\n    nome: true,\n    do: true,\n    arquivo: \"Ts\",\n    texto: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CsvDownload, {\n    className: classes.button,\n    data: props.mockdata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }\n  }, \"Download no Formarto XML\")));\n}","map":{"version":3,"sources":["/home/nhomo/2ibi.challenge/restcountries/src/Components/test.js"],"names":["React","useState","withStyles","green","FormGroup","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Favorite","FavoriteBorder","Convert","CsvDownload","JsonToExcel","makeStyles","useStyles","theme","button","margin","spacing","GreenCheckbox","root","color","checked","props","Options","className","filename","campos","style","preenchimento","data","índice","guid","text","classes","state","setState","checkedA","checkedB","checkedC","mockdata","setMockData","handleChange","event","target","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADF;AAD6B,CAAZ,CAAD,CAA5B;AAMA,MAAMC,aAAa,GAAGlB,UAAU,CAAC;AAC/BmB,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAEnB,KAAK,CAAC,GAAD,CADR;AAEJ,iBAAa;AACXmB,MAAAA,KAAK,EAAEnB,KAAK,CAAC,GAAD;AADD;AAFT,GADyB;AAO/BoB,EAAAA,OAAO,EAAE;AAPsB,CAAD,CAAV,CAQlBC,KAAD,iBAAW,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAC;AAAhB,GAA8BA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GARQ,CAAtB;AAUA,eAAe,SAASC,OAAT,CAAiBD,KAAjB,EAAwB;AAEnC,QAAME,SAAS,GAAG,wBAAlB;AAAA,QACFC,QAAQ,GAAI,iBADV;AAAA,QAEFC,MAAM,GAAI;AACR,gBAAa,UADL;AAER,cAAW;AAFH,GAFR;AAAA,QAMFC,KAAK,GAAI;AACPC,IAAAA,aAAa,EAAG;AADT,GANP;AAAA,QASFC,IAAI,GAAI,CACN;AAAGC,IAAAA,MAAM,EAAG,CAAZ;AAAiBC,IAAAA,IAAI,EAAG;AAAxB,GADM,EAEN;AAAGD,IAAAA,MAAM,EAAG,CAAZ;AAAiBC,IAAAA,IAAI,EAAG;AAAxB,GAFM,CATN;AAAA,QAaFC,IAAI,GAAI,6BAbN;AAiBA,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBrC,KAAK,CAACC,QAAN,CAAe;AACrCqC,IAAAA,QAAQ,EAAE,KAD2B;AAErCC,IAAAA,QAAQ,EAAE,KAF2B;AAGrCC,IAAAA,QAAQ,EAAE;AAH2B,GAAf,CAA1B;AAKA,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBzC,QAAQ,CAAC,EAAD,CAAvC;;AAEF,QAAM0C,YAAY,GAAIC,KAAD,IAAW;AAC9BP,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACQ,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAatB;AAA9C,KAAD,CAAR;AACD,GAFD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AACI,IAAA,SAAS,EAAEY,OAAO,CAAClB,MADvB;AAC+B,IAAA,IAAI,EAAEO,KAAK,CAACiB,QAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,eAKM,oBAAE,WAAF;AACR,IAAA,KAAK,EAAIjB,KAAK,CAACiB,QADP;AAER,IAAA,SAAS,EAAIf,SAFL;AAGR,IAAA,IAAI,MAHI;AAGH,IAAA,EAAE,MAHC;AAGA,IAAA,OAAO,EAAI,IAHX;AAIR,IAAA,KAAK,EAAI,MAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALN,eAYO,oBAAC,WAAD;AACH,IAAA,SAAS,EAAES,OAAO,CAAClB,MADhB;AACwB,IAAA,IAAI,EAAEO,KAAK,CAACiB,QADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAZP,CADE,CADJ;AAqBD","sourcesContent":["import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Convert from './Convert';\nimport CsvDownload from 'react-json-to-csv'\nimport JsonToExcel from 'react-json-excel' \nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default function Options(props) {\n\n    const className = ' class-name-for-style ' ,   \n  filename  = ' arquivo Excel ' , \n  campos  = { \n    \" índice \" : \" Índice \" , \n    \" guid \" : \" GUID \" \n  } ,\n  style  = { \n    preenchimento : \" 5px \" \n  } ,\n  data  = [ \n    {  índice : 0 ,  guid : ' asdf231234 ' } ,  \n    {  índice : 1 ,  guid : ' wetr2343af ' }  \n  ] ,\n  text  = \" Converter Json para Excel \" ; \n\n\n\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        checkedA: false,\n        checkedB: false,\n        checkedC: false,\n      });\n    const [mockdata,setMockData] = useState([])\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n\n  return (\n      <div>\n    <div color=\"primary\">\n    <CsvDownload \n        className={classes.button} data={props.mockdata} >Download no Formarto XLS</CsvDownload>\n          \n          \n          < JsonToExcel\n  dados = {props.mockdata}\n  className = {className}\n  nome do arquivo = {\"Ts\"}\n  texto = {\"text\"}\n    />\n          \n           <CsvDownload \n        className={classes.button} data={props.mockdata} >Download no Formarto XML</CsvDownload>\n    </div>\n\n    </div>\n   \n  );\n}\n"]},"metadata":{},"sourceType":"module"}