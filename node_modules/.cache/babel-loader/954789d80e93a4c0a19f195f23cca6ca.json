{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { isArray, getKeys, getValues, getEntries, normalizeXMLName, indent, stripHTML, assert } from './utils';\nexport function _prepareData(data) {\n  var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide a valid JSON';\n\n  try {\n    return typeof data === 'string' ? JSON.parse(data) : data;\n  } catch (_a) {\n    throw new Error(MESSAGE_VALID_JSON_FAIL);\n  }\n}\nexport function _createJSONData(data, replacer, space) {\n  if (replacer === void 0) {\n    replacer = null;\n  }\n\n  var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide valid JSON object';\n\n  try {\n    return JSON.stringify(data, replacer, space);\n  } catch (_a) {\n    throw new Error(MESSAGE_VALID_JSON_FAIL);\n  }\n}\nexport function _createTableMap(data) {\n  return data.map(getEntries).reduce(function (tMap, rowKVs, rowIndex) {\n    return rowKVs.reduce(function (map, kv) {\n      var key = kv[0];\n      var value = kv[1];\n      var columnValues = map[key] || Array.from({\n        length: data.length\n      }).map(function (_) {\n        return '';\n      });\n      columnValues[rowIndex] = (typeof value !== 'string' ? JSON.stringify(value) : value) || '';\n      map[key] = columnValues;\n      return map;\n    }, tMap);\n  }, Object.create(null));\n}\nexport function createCSVData(data, delimiter) {\n  if (delimiter === void 0) {\n    delimiter = ',';\n  }\n\n  if (!data.length) return '';\n\n  var tableMap = _createTableMap(data);\n\n  var head = getKeys(tableMap).join(delimiter) + '\\r\\n';\n  var columns = getValues(tableMap).map(function (column) {\n    return column.map(function (value) {\n      return \"\\\"\" + value.replace(/\\\"/g, '\"\"') + \"\\\"\";\n    });\n  });\n  var rows = columns.reduce(function (mergedColumn, column) {\n    return mergedColumn.map(function (value, rowIndex) {\n      return \"\" + value + delimiter + column[rowIndex];\n    });\n  });\n  return head + rows.join('\\r\\n');\n}\nexport function _renderTableHTMLText(data) {\n  assert(data.length > 0);\n\n  var tableMap = _createTableMap(data);\n\n  var head = getKeys(tableMap);\n  var columns = getValues(tableMap).map(function (column) {\n    return column.map(function (value) {\n      return \"<td>\" + value + \"</td>\";\n    });\n  });\n  var rows = columns.reduce(function (mergedColumn, column) {\n    return mergedColumn.map(function (value, rowIndex) {\n      return \"\" + value + column[rowIndex];\n    });\n  });\n  return \"\\n    <table>\\n      <thead>\\n        <tr><th><b>\" + head.join('</b></th><th><b>') + \"</b></th></tr>\\n      </thead>\\n      <tbody>\\n        <tr>\" + rows.join(\"</tr>\\n        <tr>\") + \"</tr>\\n      </tbody>\\n    </table>\\n  \";\n}\nexport function createXLSData(data) {\n  if (!data.length) return '';\n  var content = \"<html>\\n  <head>\\n    <meta charset=\\\"UTF-8\\\">\\n  </head >\\n  <body>\\n    \" + _renderTableHTMLText(data) + \"\\n  </body>\\n</html >\\n\";\n  return content;\n}\nexport function createXMLData(data) {\n  var content = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><!DOCTYPE base>\\n\" + _renderXML(data, 'base') + \"\\n\";\n  return content;\n}\n\nfunction _renderXML(data, tagName, arrayElementTag, spaces) {\n  if (arrayElementTag === void 0) {\n    arrayElementTag = 'element';\n  }\n\n  if (spaces === void 0) {\n    spaces = 0;\n  }\n\n  var tag = normalizeXMLName(tagName);\n  var indentSpaces = indent(spaces);\n\n  if (data === null || data === undefined) {\n    return indentSpaces + \"<\" + tag + \" />\";\n  }\n\n  var content = isArray(data) ? data.map(function (item) {\n    return _renderXML(item, arrayElementTag, arrayElementTag, spaces + 2);\n  }).join('\\n') : typeof data === 'object' ? getEntries(data).map(function (_a) {\n    var _b = __read(_a, 2),\n        key = _b[0],\n        value = _b[1];\n\n    return _renderXML(value, key, arrayElementTag, spaces + 2);\n  }).join('\\n') : indentSpaces + '  ' + stripHTML(String(data));\n  var contentWithWrapper = indentSpaces + \"<\" + tag + \">\\n\" + content + \"\\n\" + indentSpaces + \"</\" + tag + \">\";\n  return contentWithWrapper;\n}","map":{"version":3,"sources":["/home/nhomo/2ibi.challenge/restcountries/node_modules/export-from-json/dist/esm/converters.js"],"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","isArray","getKeys","getValues","getEntries","normalizeXMLName","indent","stripHTML","assert","_prepareData","data","MESSAGE_VALID_JSON_FAIL","JSON","parse","_a","Error","_createJSONData","replacer","space","stringify","_createTableMap","map","reduce","tMap","rowKVs","rowIndex","kv","key","columnValues","Array","from","length","_","Object","create","createCSVData","delimiter","tableMap","head","join","columns","column","replace","rows","mergedColumn","_renderTableHTMLText","createXLSData","content","createXMLData","_renderXML","tagName","arrayElementTag","spaces","tag","indentSpaces","undefined","item","_b","String","contentWithWrapper"],"mappings":"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","sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { isArray, getKeys, getValues, getEntries, normalizeXMLName, indent, stripHTML, assert } from './utils';\nexport function _prepareData(data) {\n    var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide a valid JSON';\n    try {\n        return typeof data === 'string' ? JSON.parse(data) : data;\n    }\n    catch (_a) {\n        throw new Error(MESSAGE_VALID_JSON_FAIL);\n    }\n}\nexport function _createJSONData(data, replacer, space) {\n    if (replacer === void 0) { replacer = null; }\n    var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide valid JSON object';\n    try {\n        return JSON.stringify(data, replacer, space);\n    }\n    catch (_a) {\n        throw new Error(MESSAGE_VALID_JSON_FAIL);\n    }\n}\nexport function _createTableMap(data) {\n    return data.map(getEntries).reduce(function (tMap, rowKVs, rowIndex) {\n        return rowKVs.reduce(function (map, kv) {\n            var key = kv[0];\n            var value = kv[1];\n            var columnValues = map[key] || Array.from({ length: data.length }).map(function (_) { return ''; });\n            columnValues[rowIndex] =\n                (typeof value !== 'string' ? JSON.stringify(value) : value) || '';\n            map[key] = columnValues;\n            return map;\n        }, tMap);\n    }, Object.create(null));\n}\nexport function createCSVData(data, delimiter) {\n    if (delimiter === void 0) { delimiter = ','; }\n    if (!data.length)\n        return '';\n    var tableMap = _createTableMap(data);\n    var head = getKeys(tableMap).join(delimiter) + '\\r\\n';\n    var columns = getValues(tableMap).map(function (column) { return column.map(function (value) { return \"\\\"\" + value.replace(/\\\"/g, '\"\"') + \"\\\"\"; }); });\n    var rows = columns.reduce(function (mergedColumn, column) { return mergedColumn.map(function (value, rowIndex) { return \"\" + value + delimiter + column[rowIndex]; }); });\n    return head + rows.join('\\r\\n');\n}\nexport function _renderTableHTMLText(data) {\n    assert(data.length > 0);\n    var tableMap = _createTableMap(data);\n    var head = getKeys(tableMap);\n    var columns = getValues(tableMap).map(function (column) { return column.map(function (value) { return \"<td>\" + value + \"</td>\"; }); });\n    var rows = columns.reduce(function (mergedColumn, column) { return mergedColumn.map(function (value, rowIndex) { return \"\" + value + column[rowIndex]; }); });\n    return \"\\n    <table>\\n      <thead>\\n        <tr><th><b>\" + head.join('</b></th><th><b>') + \"</b></th></tr>\\n      </thead>\\n      <tbody>\\n        <tr>\" + rows.join(\"</tr>\\n        <tr>\") + \"</tr>\\n      </tbody>\\n    </table>\\n  \";\n}\nexport function createXLSData(data) {\n    if (!data.length)\n        return '';\n    var content = \"<html>\\n  <head>\\n    <meta charset=\\\"UTF-8\\\">\\n  </head >\\n  <body>\\n    \" + _renderTableHTMLText(data) + \"\\n  </body>\\n</html >\\n\";\n    return content;\n}\nexport function createXMLData(data) {\n    var content = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><!DOCTYPE base>\\n\" + _renderXML(data, 'base') + \"\\n\";\n    return content;\n}\nfunction _renderXML(data, tagName, arrayElementTag, spaces) {\n    if (arrayElementTag === void 0) { arrayElementTag = 'element'; }\n    if (spaces === void 0) { spaces = 0; }\n    var tag = normalizeXMLName(tagName);\n    var indentSpaces = indent(spaces);\n    if (data === null || data === undefined) {\n        return indentSpaces + \"<\" + tag + \" />\";\n    }\n    var content = isArray(data)\n        ? data.map(function (item) { return _renderXML(item, arrayElementTag, arrayElementTag, spaces + 2); }).join('\\n')\n        : typeof data === 'object'\n            ? getEntries(data)\n                .map(function (_a) {\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                return _renderXML(value, key, arrayElementTag, spaces + 2);\n            }).join('\\n')\n            : indentSpaces + '  ' + stripHTML(String(data));\n    var contentWithWrapper = indentSpaces + \"<\" + tag + \">\\n\" + content + \"\\n\" + indentSpaces + \"</\" + tag + \">\";\n    return contentWithWrapper;\n}\n"]},"metadata":{},"sourceType":"module"}