{"ast":null,"code":"var _jsxFileName = \"/home/nhomo/2ibi.challenge/restcountries/src/Components/test.js\";\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Convert from './Convert';\nimport CsvDownload from 'react-json-to-csv';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 15\n  }\n})));\nexport default function Options(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    checkedA: false,\n    checkedB: false,\n    checkedC: false\n  });\n  const [mockdata, setMockData] = useState([]);\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CsvDownload, {\n    className: classes.button,\n    data: props.mockdata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \"Download no Formarto XLS\"), /*#__PURE__*/React.createElement(CsvDownload, {\n    className: classes.button,\n    data: props.mockdata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }\n  }, \"Download no Formarto CSV\"), /*#__PURE__*/React.createElement(CsvDownload, {\n    className: classes.button,\n    data: props.mockdata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }\n  }, \"Download no Formarto XML\")));\n}","map":{"version":3,"sources":["/home/nhomo/2ibi.challenge/restcountries/src/Components/test.js"],"names":["React","useState","withStyles","green","FormGroup","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Favorite","FavoriteBorder","Convert","CsvDownload","makeStyles","useStyles","theme","button","margin","spacing","GreenCheckbox","root","color","checked","props","Options","classes","state","setState","checkedA","checkedB","checkedC","mockdata","setMockData","handleChange","event","target","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADF;AAD6B,CAAZ,CAAD,CAA5B;AAMA,MAAMC,aAAa,GAAGjB,UAAU,CAAC;AAC/BkB,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAElB,KAAK,CAAC,GAAD,CADR;AAEJ,iBAAa;AACXkB,MAAAA,KAAK,EAAElB,KAAK,CAAC,GAAD;AADD;AAFT,GADyB;AAO/BmB,EAAAA,OAAO,EAAE;AAPsB,CAAD,CAAV,CAQlBC,KAAD,iBAAW,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAC;AAAhB,GAA8BA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GARQ,CAAtB;AAUA,eAAe,SAASC,OAAT,CAAiBD,KAAjB,EAAwB;AACnC,QAAME,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoB3B,KAAK,CAACC,QAAN,CAAe;AACrC2B,IAAAA,QAAQ,EAAE,KAD2B;AAErCC,IAAAA,QAAQ,EAAE,KAF2B;AAGrCC,IAAAA,QAAQ,EAAE;AAH2B,GAAf,CAA1B;AAKA,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyB/B,QAAQ,CAAC,EAAD,CAAvC;;AAEF,QAAMgC,YAAY,GAAIC,KAAD,IAAW;AAC9BP,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACQ,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAab;AAA9C,KAAD,CAAR;AACD,GAFD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AACI,IAAA,SAAS,EAAEG,OAAO,CAACT,MADvB;AAC+B,IAAA,IAAI,EAAEO,KAAK,CAACQ,QAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,eAGO,oBAAC,WAAD;AACH,IAAA,SAAS,EAAEN,OAAO,CAACT,MADhB;AACwB,IAAA,IAAI,EAAEO,KAAK,CAACQ,QADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHP,eAKO,oBAAC,WAAD;AACH,IAAA,SAAS,EAAEN,OAAO,CAACT,MADhB;AACwB,IAAA,IAAI,EAAEO,KAAK,CAACQ,QADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCALP,CADE,CADJ;AAcD","sourcesContent":["import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Convert from './Convert';\nimport CsvDownload from 'react-json-to-csv'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default function Options(props) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        checkedA: false,\n        checkedB: false,\n        checkedC: false,\n      });\n    const [mockdata,setMockData] = useState([])\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n\n  return (\n      <div>\n    <div color=\"primary\">\n    <CsvDownload \n        className={classes.button} data={props.mockdata} >Download no Formarto XLS</CsvDownload>\n           <CsvDownload \n        className={classes.button} data={props.mockdata} >Download no Formarto CSV</CsvDownload>\n           <CsvDownload \n        className={classes.button} data={props.mockdata} >Download no Formarto XML</CsvDownload>\n    </div>\n\n    </div>\n   \n  );\n}\n"]},"metadata":{},"sourceType":"module"}