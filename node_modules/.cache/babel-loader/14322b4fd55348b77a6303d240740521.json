{"ast":null,"code":"var _jsxFileName = \"/home/nhomo/2ibi.challenge/restcountries/src/Components/test.js\";\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Convert from './Convert';\nimport CsvDownload from 'react-json-to-csv';\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 15\n  }\n})));\nexport default function Options(props) {\n  const [state, setState] = React.useState({\n    checkedA: false,\n    checkedB: false,\n    checkedC: false\n  });\n  const [mockdata, setMockData] = useState([]);\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const handleCovert = () => {\n    if (state.checkedA == true) {\n      alert(state.checkedA);\n    }\n\n    if (state.checkedB == true) {\n      alert('This is Cheeked B');\n      return /*#__PURE__*/React.createElement(CsvDownload, {\n        data: props.mockdata,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      });\n    }\n\n    if (state.checkedC == true) {\n      alert('This is Checked C');\n    }\n\n    if (state.checkedA == false && state.checkedB == false && state.checkedC == false) {\n      alert('No Options Select , Please Select at least One');\n    }\n\n    return /*#__PURE__*/React.createElement(Convert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CsvDownload, {\n    data: props.mockdata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, \"Download no Formar CSV\")));\n}","map":{"version":3,"sources":["/home/nhomo/2ibi.challenge/restcountries/src/Components/test.js"],"names":["React","useState","withStyles","green","FormGroup","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Favorite","FavoriteBorder","Convert","CsvDownload","GreenCheckbox","root","color","checked","props","Options","state","setState","checkedA","checkedB","checkedC","mockdata","setMockData","handleChange","event","target","name","handleCovert","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Convert from './Convert';\nimport CsvDownload from 'react-json-to-csv'\n\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default function Options(props) {\n    const [state, setState] = React.useState({\n        checkedA: false,\n        checkedB: false,\n        checkedC: false,\n      });\n    const [mockdata,setMockData] = useState([])\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  const handleCovert = () =>{\n\n    if(state.checkedA ==true){\n        alert(state.checkedA)\n\n    }\n    if(state.checkedB ==true){\n        alert('This is Cheeked B')\n     return <CsvDownload data={props.mockdata} />\n\n    }\n    if(state.checkedC == true){\n        alert('This is Checked C')\n    }\n\n    if(state.checkedA==false && state.checkedB==false && state.checkedC ==false){\n        alert('No Options Select , Please Select at least One')\n    }\n\n    return <Convert></Convert>\n\n}\n\n  return (\n      <div>\n    <FormGroup row>\n    \n      \n    </FormGroup>\n\n    <div >\n    <CsvDownload data={props.mockdata} >Download no Formar CSV</CsvDownload>\n    </div>\n    </div>\n   \n  );\n}\n"]},"metadata":{},"sourceType":"module"}