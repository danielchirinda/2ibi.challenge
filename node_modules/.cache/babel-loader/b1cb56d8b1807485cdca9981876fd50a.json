{"ast":null,"code":"var _jsxFileName = \"/home/nhomo/2ibi.challenge/restcountries/src/Components/TableReader.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nconst columns = [//name, capital, region,subRegion,population,area,timezone,nativeName, link\n{\n  id: 'name',\n  label: 'Name',\n  minWidth: 100\n}, {\n  id: 'capital',\n  label: 'Capital',\n  minWidth: 100\n}, {\n  id: 'region',\n  label: 'Region',\n  minWidth: 100\n}, {\n  id: 'subRegion',\n  label: 'Sub Region',\n  minWidth: 100\n}, {\n  id: 'population',\n  label: 'Population',\n  minWidth: 100\n}, {\n  id: 'area',\n  label: 'Area',\n  minWidth: 100\n}, {\n  id: 'timezone',\n  label: 'timezone',\n  minWidth: 100\n}, {\n  id: 'nativeName',\n  label: 'native Name',\n  minWidth: 100\n}, {\n  id: 'link',\n  label: 'Link Bandeira',\n  minWidth: 100\n}];\n\nfunction createData(name, capital, region, subRegion, population, area, timezone, nativeName, link) {\n  return {\n    name,\n    capital,\n    region,\n    subRegion,\n    population,\n    area,\n    timezone,\n    nativeName,\n    link\n  };\n}\n/* const rows = [\n\nresponseData.map(res => createData(res.name, 'IN', 1324171354, 3287263),)\n\n]; */\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable(props) {\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      console.log(response.data);\n      setCountries(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const datas = countries;\n  console.log('Daniel Chirinda');\n  console.log(countries);\n  let rows = [datas.forEach(data => {\n    createData(data.name, data.capital, data.region, data.subregion, data.population, data.area, data.timezone[0], data.nativename, data.flag);\n  })];\n  console.log(datas);\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.alpha2Code,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, columns.map(column => {\n      const value = row[column.name];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.name,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 23\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/nhomo/2ibi.challenge/restcountries/src/Components/TableReader.js"],"names":["React","useState","useEffect","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","axios","columns","id","label","minWidth","createData","name","capital","region","subRegion","population","area","timezone","nativeName","link","useStyles","root","width","container","maxHeight","StickyHeadTable","props","countries","setCountries","get","then","response","console","log","data","catch","error","datas","rows","forEach","subregion","nativename","flag","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","map","column","alpha2Code","align","slice","row","format","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios'\n\n\nconst columns = [\n    //name, capital, region,subRegion,population,area,timezone,nativeName, link\n  { id: 'name', label: 'Name', minWidth: 100 },\n  { id: 'capital', label: 'Capital', minWidth: 100 },\n  { id: 'region', label: 'Region', minWidth: 100 },\n  { id: 'subRegion', label: 'Sub Region', minWidth: 100 },\n  { id: 'population', label: 'Population', minWidth: 100 },\n  { id: 'area', label: 'Area', minWidth: 100 },\n  { id: 'timezone', label: 'timezone', minWidth: 100 },\n  { id: 'nativeName', label: 'native Name', minWidth: 100 },\n  { id: 'link', label: 'Link Bandeira', minWidth: 100 },\n  \n];\n\nfunction createData(name, capital, region,subRegion,population,area,timezone,nativeName,link) {\n  return { name, capital, region, subRegion, population,area,timezone,nativeName,link};\n}\n\n/* const rows = [\n\nresponseData.map(res => createData(res.name, 'IN', 1324171354, 3287263),)\n\n]; */\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport default function StickyHeadTable(props) {\n\n\n    const [countries,setCountries] = useState([])\n\n    useEffect(() => {\n        axios.get('https://restcountries.eu/rest/v2/all').then(\n            response => {\n                console.log(response.data)\n                setCountries(response.data)\n            } \n        ).catch(error =>{ console.log(error)\n    }\n        )\n    },[])\n  \n  const datas = countries\n\n  console.log('Daniel Chirinda')\n  console.log(countries)\n\nlet rows = [\n \n    datas.forEach(data => {\n      createData(data.name, data.capital,data.region,data.subregion,data.population,data.area,data.timezone[0],data.nativename,data.flag)\n\n    })\n\n\n]\n  console.log(datas)\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n   \n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.alpha2Code}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.name}>\n                  {columns.map((column) => {\n                    const value = row[column.name];\n                    return (\n                      <TableCell key={column.name} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}