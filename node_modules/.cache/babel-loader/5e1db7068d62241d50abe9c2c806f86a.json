{"ast":null,"code":"var _jsxFileName = \"/home/nhomo/2ibi.challenge/restcountries/src/Components/Options.js\";\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Convert from './Convert';\nimport CsvDownload from 'react-json-to-csv';\nimport exportFromJSON from 'export-from-json';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 15\n  }\n})));\nexport default function Options(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    checkedA: false,\n    checkedB: false,\n    checkedC: false\n  });\n  const [mockdata, setMockData] = useState([]);\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const downloadXLS = () => {\n    {\n      exportFromJSON({\n        data: props.mockdata,\n        fileName: 'data',\n        exportType: exportFromJSON.types.xls\n      });\n    }\n  };\n\n  const downloadXML = () => {\n    {\n      exportFromJSON({\n        data: props.mockdata,\n        fileName: 'data',\n        exportType: exportFromJSON.types.xml\n      });\n    }\n  };\n\n  const downloadCSV = () => {\n    {\n      exportFromJSON({\n        data: props.mockdata,\n        fileName: 'data',\n        exportType: exportFromJSON.types.csv\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: downloadCSV,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, \"Download no Formarto CSV\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: downloadXML,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, \"Download no Formarto XML\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    startIcon: /*#__PURE__*/React.createElement(ImportExportIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 20\n      }\n    }),\n    onClick: downloadXLS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, \"Download no Formarto XLS\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    startIcon: /*#__PURE__*/React.createElement(ImportExportIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    startIcon: /*#__PURE__*/React.createElement(ImportExportIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Upload\")));\n}","map":{"version":3,"sources":["/home/nhomo/2ibi.challenge/restcountries/src/Components/Options.js"],"names":["React","useState","withStyles","green","FormGroup","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Favorite","FavoriteBorder","Convert","CsvDownload","exportFromJSON","makeStyles","Button","Icon","ImportExportIcon","KeyboardVoiceIcon","useStyles","theme","button","margin","spacing","GreenCheckbox","root","color","checked","props","Options","classes","state","setState","checkedA","checkedB","checkedC","mockdata","setMockData","handleChange","event","target","name","downloadXLS","data","fileName","exportType","types","xls","downloadXML","xml","downloadCSV","csv"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Convert from './Convert';\nimport CsvDownload from 'react-json-to-csv'\nimport exportFromJSON from 'export-from-json'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default function Options(props) {\n\n\n\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        checkedA: false,\n        checkedB: false,\n        checkedC: false,\n      });\n    const [mockdata,setMockData] = useState([])\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\nconst downloadXLS = () =>{\n    {exportFromJSON({ data: props.mockdata, fileName: 'data', exportType: exportFromJSON.types.xls })}\n\n}\n\nconst downloadXML = () =>{\n    {exportFromJSON({ data: props.mockdata, fileName: 'data', exportType: exportFromJSON.types.xml })}\n\n}\n\nconst downloadCSV = () =>{\n    {exportFromJSON({ data: props.mockdata, fileName: 'data', exportType: exportFromJSON.types.csv })}\n\n}\n  return (\n      <div>\n    <div >\n    <Button color=\"primary\"  ></Button>\n\n    <Button color=\"primary\"  onClick={downloadCSV} >Download no Formarto CSV</Button>\n\n\n    <Button color=\"primary\" onClick={downloadXML} >Download no Formarto XML</Button>\n\n    <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<ImportExportIcon/>}\n        onClick={downloadXLS}\n    >\n        Download no Formarto XLS\n      </Button>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<ImportExportIcon/>}\n    >\n        Upload\n      </Button>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<ImportExportIcon/>}\n    >\n        Upload\n      </Button>\n\n    </div>\n\n    </div>\n   \n  );\n}\n"]},"metadata":{},"sourceType":"module"}