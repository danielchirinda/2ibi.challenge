{"ast":null,"code":"var _jsxFileName = \"/home/nhomo/2ibi.challenge/restcountries/src/Components/CountriesAPI.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 100\n}, {\n  id: 'capital',\n  label: 'Capital',\n  minWidth: 100\n}, {\n  id: 'region',\n  label: 'Region',\n  minWidth: 100\n}, {\n  id: 'subRegion',\n  label: 'Sub Region',\n  minWidth: 100\n}, {\n  id: 'population',\n  label: 'Population',\n  minWidth: 100\n}, {\n  id: 'area',\n  label: 'Area',\n  minWidth: 100\n}, {\n  id: 'timezone',\n  label: 'timezone',\n  minWidth: 100\n}, {\n  id: 'nativeName',\n  label: 'native Name',\n  minWidth: 100\n}, {\n  id: 'flag',\n  label: 'Link Bandeira',\n  minWidth: 100\n}];\nlet rows = [];\n\nfunction createData(name, capital, region, subRegion, population, area, timezone, nativeName, flag) {\n  return {\n    name,\n    capital,\n    region,\n    subRegion,\n    population,\n    area,\n    timezone,\n    nativeName,\n    flag\n  };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function CountriesAPI() {\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2').then(response => {\n      setCountries(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  var dados = getData();\n  dados.then(function (dados) {\n    for (let index = 0; index < dados.length - 1; index++) {\n      rows.push(createData(dados[index].name, dados[index].capital, dados[index].region, dados[index].subregion, dados[index].population, dados[index].area, dados[index].timezones[0], dados[index].nativeName, dados[index].flag));\n    }\n  });\n\n  async function getData() {\n    let response = await axios.get('https://restcountries.eu/rest/v2');\n    let user = await response.data;\n    return user;\n  }\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  if (rows.length < 1) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"Looding... \"));\n  } else {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TableContainer, {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      stickyHeader: true,\n      \"aria-label\": \"sticky table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        hover: true,\n        role: \"checkbox\",\n        tabIndex: -1,\n        key: row.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, columns.map(column => {\n        const value = row[column.id];\n        return /*#__PURE__*/React.createElement(TableCell, {\n          key: column.id,\n          align: column.align,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 23\n          }\n        }, column.format && typeof value === 'number' ? column.format(value) : value);\n      }));\n    })))), /*#__PURE__*/React.createElement(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/home/nhomo/2ibi.challenge/restcountries/src/Components/CountriesAPI.js"],"names":["React","useState","useEffect","axios","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","rows","createData","name","capital","region","subRegion","population","area","timezone","nativeName","flag","useStyles","root","width","container","maxHeight","CountriesAPI","countries","setCountries","get","then","response","data","catch","error","console","log","dados","getData","index","length","push","subregion","timezones","user","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","map","column","align","slice","row","format"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 100 },\n  { id: 'capital', label: 'Capital', minWidth: 100 },\n  { id: 'region', label: 'Region', minWidth: 100 },\n  { id: 'subRegion', label: 'Sub Region', minWidth: 100 },\n  { id: 'population', label: 'Population', minWidth: 100 },\n  { id: 'area', label: 'Area', minWidth: 100 },\n  { id: 'timezone', label: 'timezone', minWidth: 100 },\n  { id: 'nativeName', label: 'native Name', minWidth: 100 },\n  { id: 'flag', label: 'Link Bandeira', minWidth: 100 },\n  \n];\nlet rows= []\n\nfunction createData(name, capital, region,subRegion,population,area,timezone,nativeName,flag) {\n  return { name, capital, region, subRegion, population,area,timezone,nativeName,flag};\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\n\nexport default function CountriesAPI() {\n\n    const [countries,setCountries] = useState([])\n\nuseEffect(() => {\n        axios.get('https://restcountries.eu/rest/v2').then(\n            response => {\n                setCountries(response.data)\n            } \n        ).catch(error =>{ \n            console.log(error)\n    }\n        )\n    },[])   \n\n\nvar dados = getData()\n     \ndados.then(function(dados){\n    for (let index = 0; index < dados.length-1; index++) {\n        rows.push(createData(dados[index].name,dados[index].capital,dados[index].region,dados[index].subregion,dados[index].population,dados[index].area,dados[index].timezones[0],dados[index].nativeName,dados[index].flag));\n        \n    }\n\n })\n\nasync function getData() {\n\n        let response = await axios.get('https://restcountries.eu/rest/v2');\n        let user = await response.data\n        return user;\n      }\n  \n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n   \n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n\n\nif(rows.length < 1 ){\nreturn(\n    <div>\n        \n        <h2>Looding... </h2>\n    </div>\n)\n}else{\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  )\n \n}\n}\n"]},"metadata":{},"sourceType":"module"}